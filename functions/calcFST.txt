//  (f$)calcFST(o<Subpopulation>$ subpop1, o<Subpopulation>$ subpop2)
//
//  Calculate the FST between two subpopulations
//
//  Note that this is also part of recipe 11.1, beginning in SLiM 2.5.


//  Created by Ben Haller on 10/20/2017.
//  Copyright (c) 2017 Philipp Messer.  All rights reserved.
//  A product of the Messer Lab, http://messerlab.org/slim/


//  This file is part of SLiM-Extras.
//
//  SLiM-Extras is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
//
//  SLiM-Extras is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License along with SLiM-Extras.  If not, see <http://www.gnu.org/licenses/>.


function (f$)calcFST(o<Subpopulation>$ subpop1, o<Subpopulation>$ subpop2)
{
	p1_p = sim.mutationFrequencies(subpop1);
	p2_p = sim.mutationFrequencies(subpop2);
	mean_p = (p1_p + p2_p) / 2.0;
	H_t = 2.0 * mean_p * (1.0 - mean_p);
	H_s = p1_p * (1.0 - p1_p) + p2_p * (1.0 - p2_p);
	fst = 1.0 - H_s/H_t;
	
	return mean(fst);
}
