//  (f$)calcFST(o<Subpopulation>$ subpop1, o<Subpopulation>$ subpop2)
//
//  Calculate the FST between two subpopulations
//
//  Note that this is also part of recipe 11.1, beginning in SLiM 2.5.

//  Created by Ben Haller on 10/20/2017.
//  A product of the Messer Lab, http://messerlab.org/slim/

/*

Ben Haller and Philipp Messer, the authors of this code, hereby place the code in this file into the public domain without restriction.  If you use this code, please credit SLiM-Extras and provide a link to the SLiM-Extras repository at https://github.com/MesserLab/SLiM-Extras.  Thank you.

*/


function (f$)calcFST(o<Subpopulation>$ subpop1, o<Subpopulation>$ subpop2)
{
	p1_p = sim.mutationFrequencies(subpop1);
	p2_p = sim.mutationFrequencies(subpop2);
	mean_p = (p1_p + p2_p) / 2.0;
	H_t = 2.0 * mean_p * (1.0 - mean_p);
	H_s = p1_p * (1.0 - p1_p) + p2_p * (1.0 - p2_p);
	fst = 1.0 - H_s/H_t;
	
	return mean(fst);
}
